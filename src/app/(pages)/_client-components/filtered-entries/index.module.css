.filteredEntries {
  display: grid;
  gap: max(15px, 2.5vw);
  grid-auto-flow: dense;
  grid-template-columns: repeat(2, 1fr);
}

.small {
  grid-area: auto / auto / span 1 / span 1;
}

.large {
  grid-area: auto / auto / span 2 / span 2;
}

.entryBtn {
  background-color: transparent;
  border: none;
  overflow: clip;
  padding: 0;
}

.entry,
.error {
  aspect-ratio: 1;
  position: relative;
  width: 100%;
}

.textEntryBox {
  border: 0.1em solid rgb(var(--medium-contrast-rgb));
  border-radius: 0.5em;
  display: flex;
  flex-direction: column;
  font-size: calc(10px + 0.5vw);
  height: 100%;
  padding: 0.5em 1em 1em 0.5em;
}

.large .textEntryBox {
  font-size: calc(15px + 2vw);
}

.textEntryIcon {
  height: 2em;
  position: relative;
  width: 2em;
}

.textEntryContent {
  align-items: center;
  display: flex;
  flex-grow: 1;
  margin-left: 1em;
}

.textEntryText,
.imgEntryCaption,
.videoEntryCaption {
  font-family: var(--font-muli);
}

.textEntryText {
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 6;
  color: rgb(var(--foreground-rgb));
  display: -webkit-box;
  line-height: 1.5;
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
}

.imgEntryImageContainer {
  height: 100%;
  position: relative;
}

.imgEntryImage {
  object-fit: cover;
}

.imgEntryCaptionBox,
.videoEntryCaptionBox {
  align-items: center;
  background-color: rgba(0, 0, 0, 0.75);
  display: flex;
  font-size: calc(8px + 1vw);
  height: 4em;
  padding: 0.5em;
  position: absolute;
  top: calc(100% - 3.9em);
  width: 100%;
}

.large .imgEntryCaptionBox,
.large .videoEntryCaptionBox {
  font-size: calc(12px + 1vw);
}

.imgEntryCaption,
.videoEntryCaption {
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  color: rgba(255, 255, 255, 0.8);
  display: -webkit-box;
  font-weight: 300;
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
}

.videoEntryBox,
.videoEntryVideo {
  height: 100%;
  width: 100%;
}

.videoEntryVideo {
  object-fit: cover;
}

.placeholder {
  aspect-ratio: 1;
  background-color: rgb(var(--low-contrast-rgb));
}

.shimmer {
  animation: shimmer 2.5s linear infinite;
  background: linear-gradient(
    to right bottom,
    transparent 25%,
    rgb(var(--medium-contrast-rgb)) 50%,
    transparent 75%
  );
  background-repeat: no-repeat;
  background-size: 200% 200%;
  height: 100%;
}

@keyframes shimmer {
  0% {
    background-position: 200% 200%;
  }
  100% {
    background-position: -200% -200%;
  }
}

.error {
  align-items: center;
  background-color: rgb(var(--low-contrast-rgb));
  border-radius: 0.2em;
  display: flex;
  flex-direction: column;
  font-size: calc(12px + 1vw);
  gap: 1.5em;
  justify-content: center;
}

.large .error {
  font-size: calc(16px + 1vw);
}

.retryButton {
  align-items: center;
  background-color: transparent;
  border: 0.15em solid rgb(var(--foreground-rgb));
  border-radius: 0.2em;
  color: rgb(var(--foreground-rgb));
  display: flex;
  font-family: var(--font-muli);
  font-size: calc(10px + 1vw);
  font-weight: 600;
  gap: 0.5em;
  padding: 0.35em 0.75em;
}

.large .retryButton {
  font-size: calc(12px + 1vw);
}

.retryIcon {
  height: 1.5em;
  position: relative;
  width: 1.5em;
}

.hiddenPage,
.hiddenEntry {
  display: none;
}

.shownPage,
.shownEntry {
  animation: fadeIn 0.2s ease-in;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.loading,
.loadError,
.endOfFeed {
  font-size: calc(10px + 1vw);
}

.loading,
.loadError {
  padding: 1em;
}

.loading {
  --loader-dimension: 0.5em;
}

.loader,
.loader::before,
.loader::after {
  animation: loader 2s ease infinite;
  background: currentColor;
  border-radius: 0.05em;
  box-shadow:
    0 calc(1.5 * var(--loader-dimension)),
    0 calc(-1.5 * var(--loader-dimension));
  color: rgb(var(--high-contrast-rgb));
  height: var(--loader-dimension);
  width: var(--loader-dimension);
}

.loader {
  margin: calc(-3 * var(--loader-dimension)) auto
    calc(9 * var(--loader-dimension));
  position: relative;
  transform: translateX(calc(-1.5 * var(--loader-dimension)))
    translateY(calc(4.5 * var(--loader-dimension)));
}

.loader::before,
.loader::after {
  content: "";
  position: absolute;
}

.loader::before {
  left: calc(1.5 * var(--loader-dimension));
}

.loader::after {
  animation-delay: 0.4s;
  left: calc(3 * var(--loader-dimension));
}

@keyframes loader {
  0% {
    color: rgb(var(--high-contrast-rgb));
    top: 0;
  }
  50% {
    color: rgba(var(--medium-contrast-rgb));
    top: calc(1.5 * var(--loader-dimension));
  }
  100% {
    color: rgb(var(--high-contrast-rgb));
    top: 0;
  }
}

.loadError {
  align-items: center;
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.loadErrorMessage {
  align-items: center;
  display: flex;
  gap: 0.25em;
}

.loadErrorIcon {
  height: 1.5em;
  position: relative;
  width: 1.5em;
}

.loadErrorText,
.endOfFeedText {
  font-style: italic;
  font-weight: 300;
}

.loadErrorBtn {
  align-items: center;
  background-color: transparent;
  border: 0.1em solid rgb(var(--foreground-rgb));
  border-radius: 0.2em;
  color: rgb(var(--foreground-rgb));
  display: flex;
  font-size: 1em;
  gap: 0.2em;
  padding: 0.25em 0.75em;
}

.loadErrorBtnIcon {
  height: 1.2em;
  position: relative;
  width: 1.2em;
}

.endOfFeed {
  align-items: center;
  display: flex;
  padding: 2em 0;
}

.endOfFeed::before,
.endOfFeed::after {
  background-color: rgb(var(--high-contrast-rgb));
  content: "";
  flex-grow: 1;
  height: 0.05em;
}

.endOfFeed::before {
  margin-right: 0.5em;
}

.endOfFeed::after {
  margin-left: 0.5em;
}

.intersectionObserver {
  height: 50px;
}

@media (min-width: 800px) {
  .filteredEntries {
    gap: 2vw;
    grid-template-columns: repeat(4, 1fr);
  }

  .textEntryBox {
    font-size: calc(8px + 0.5vw);
  }

  .large .textEntryBox {
    font-size: calc(8px + 2vw);
  }

  .imgEntryCaptionBox,
  .videoEntryCaptionBox {
    font-size: calc(8px + 0.25vw);
  }

  .large .imgEntryCaptionBox,
  .large .videoEntryCaptionBox {
    font-size: calc(10px + 1vw);
  }

  .error {
    font-size: calc(12px + 0.5vw);
  }

  .large .error {
    font-size: calc(18px + 0.5vw);
  }

  .retryButton {
    font-size: calc(10px + 0.5vw);
  }

  .large .retryButton {
    font-size: calc(12px + 0.5vw);
  }

  .loadError,
  .endOfFeed {
    font-size: calc(12px + 0.5vw);
  }
}

@media (min-width: 1600px) {
  .filteredEntries {
    gap: 1vw;
    grid-template-columns: repeat(8, 1fr);
  }

  .textEntryBox {
    font-size: calc(8px + 0.2vw);
  }

  .large .textEntryBox {
    font-size: calc(8px + 1vw);
  }

  .imgEntryCaptionBox,
  .videoEntryCaptionBox {
    font-size: calc(8px + 0.1vw);
  }

  .large .imgEntryCaptionBox,
  .large .videoEntryCaptionBox {
    font-size: calc(8px + 0.5vw);
  }

  .error {
    font-size: calc(12px + 0.2vw);
  }

  .large .error {
    font-size: calc(18px + 0.2vw);
  }

  .retryButton {
    font-size: calc(10px + 0.2vw);
  }

  .large .retryButton {
    font-size: calc(12px + 0.2vw);
  }
}
